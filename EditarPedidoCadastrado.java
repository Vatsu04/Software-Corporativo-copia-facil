/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package copiafacil;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edsoo
 */
public class EditarPedidoCadastrado extends javax.swing.JFrame {

    /**
     * Creates new form PedidoCadastrado
     */
    public EditarPedidoCadastrado() {
        initComponents();
        listarValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Voltar = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Carregar = new javax.swing.JButton();
        Descricao = new javax.swing.JTextField();
        Prazo = new javax.swing.JTextField();
        Quantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPedidos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Voltar.setContentAreaFilled(false);
        Voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });
        getContentPane().add(Voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 60, 30));

        Limpar.setContentAreaFilled(false);
        Limpar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });
        getContentPane().add(Limpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 60, 30));

        Editar.setContentAreaFilled(false);
        Editar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        getContentPane().add(Editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 60, 30));

        Excluir.setContentAreaFilled(false);
        Excluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(Excluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, 60, 30));

        Carregar.setContentAreaFilled(false);
        Carregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarregarActionPerformed(evt);
            }
        });
        getContentPane().add(Carregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 60, 30));
        getContentPane().add(Descricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 120, -1));
        getContentPane().add(Prazo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 90, -1));
        getContentPane().add(Quantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 60, -1));

        TabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id_Pedido", "Descrição", "Prazo", "Quantidade", "Id_Cliente", "Preco_Unitario"
            }
        ));
        jScrollPane1.setViewportView(TabelaPedidos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 520, 180));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/15.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, -1));
        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        // TODO add your handling code here:
         if (LoginFuncionario.role.equals("ADMIN")) {
    // Show admin menu
            new MenuAdm().setVisible(true);
            
            this.dispose();
} else if (LoginFuncionario.role.equals("FUNCIONARIO")) {
    new MenuFuncionario().setVisible(true);
            
            this.dispose();
} else {
    // Handle invalid role or show a default menu
    JOptionPane.showMessageDialog(this, "Função inválida, fechando o software.");
    
    this.dispose();
}
    }//GEN-LAST:event_VoltarActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        // TODO add your handling code here:
        LimparCampos();  
    }//GEN-LAST:event_LimparActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        // TODO add your handling code here:
         AlterarPedidos();
        listarValores();
        LimparCampos();
    }//GEN-LAST:event_EditarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        // TODO add your handling code here:
         ExcluirPedidoCadastrado();
        listarValores();
        LimparCampos();   
    }//GEN-LAST:event_ExcluirActionPerformed

    private void CarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarregarActionPerformed
        // TODO add your handling code here:
         CarregarCampos();
    }//GEN-LAST:event_CarregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarPedidoCadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarPedidoCadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarPedidoCadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarPedidoCadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarPedidoCadastrado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Carregar;
    private javax.swing.JTextField Descricao;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Excluir;
    private javax.swing.JTextField ID;
    private javax.swing.JButton Limpar;
    private javax.swing.JTextField Prazo;
    private javax.swing.JTextField Quantidade;
    private javax.swing.JTable TabelaPedidos;
    private javax.swing.JButton Voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
private void listarValores() { //Declaração do método listarValores(). Esse método é provavelmente parte de uma classe e é responsável por preencher uma tabela ou lista com valores obtidos de algum lugar, como um banco de dados.
        try {
            PedidoCadastradoDAO objPedidoCadastradoDAO = new PedidoCadastradoDAO();
            DefaultTableModel model = (DefaultTableModel) TabelaPedidos.getModel();
            model.setNumRows(0);

            ArrayList<PedidoCadastrado> lista = objPedidoCadastradoDAO.PesquisarPedidoCadastrado();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_Pedido(),
                    lista.get(num).getDescricao(),
                    lista.get(num).getPrazo(),
                    lista.get(num).getQuantidade(),
                    lista.get(num).getId_Cliente(),
                     lista.get(num).getPreco_Unitario(),
              
                });

            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listar Valores :" + erro);
        }
    }

  private void CarregarCampos() {
/*
        Esse método é responsável por carregar os campos de texto da interface com os valores selecionados na tabela. Ele faz o seguinte:

Obtém o índice da linha selecionada na tabela através do método getSelectedRow().
Através do modelo da tabela (TabelaPedidoss.getModel()), obtém os valores correspondentes da linha selecionada.
Define os valores obtidos nos campos de texto Id, User, Telefone e Email.
 */        
        int setar = TabelaPedidos.getSelectedRow();

        ID.setText(TabelaPedidos.getModel().getValueAt(setar, 0).toString());
        Descricao.setText(TabelaPedidos.getModel().getValueAt(setar, 1).toString());
           Prazo.setText(TabelaPedidos.getModel().getValueAt(setar, 2 ).toString());
         
         Quantidade.setText(TabelaPedidos.getModel().getValueAt(setar, 3).toString());
        
     
    }

    private void LimparCampos() {
/*
        Esse método é responsável por limpar os campos de texto da interface. Ele simplesmente define o texto vazio para os campos Id, User, Telefone e Email.
 */        
        ID.setText("");
        Descricao.setText("");
        Prazo.setText("");
        
        Quantidade.setText("");
       
        
    }

    private void AlterarPedidos() {
 /*
 Esse método é responsável por alterar as informações de um usuário. Ele faz o seguinte:

Obtém os valores dos campos Id, User, Telefone e Email.
Cria uma instância da classe Pedidos e define os valores obtidos nos respectivos atributos.
Cria uma instância da classe PedidosDAO.
Chama o método AlterarPedidos() da classe PedidosDAO, passando o objeto objPedidos como argumento para realizar a alteração no banco de dados.   
 */         
        int id_pedido;
       
     
        String descricao;
        String prazo;
        int quantidade;
        

        id_pedido = Integer.parseInt(ID.getText());
        descricao = Descricao.getText();
          prazo = Prazo.getText();
        quantidade = Integer.parseInt(Quantidade.getText());
      
        /*
         private float Preco_Unitario;
    private String Descricao;
    private String Prazo;
    private int Quantidade;
    private int Id_Cliente;
        */
      
        
        PedidoCadastrado objPedidos = new PedidoCadastrado();
        objPedidos.setId_Pedido(id_pedido);
        objPedidos.setDescricao(descricao);
         objPedidos.setPrazo(prazo);
        objPedidos.setQuantidade(quantidade);
      
        
        PedidoCadastradoDAO objPedidosDAO = new PedidoCadastradoDAO();
        objPedidosDAO.AlterarPedidoCadastrado(objPedidos);

    }

    private void ExcluirPedidoCadastrado() {
 /*
 Esse método é responsável por excluir um usuário. Ele faz o seguinte:

Obtém o valor do campo Id e converte para o tipo inteiro.
Cria uma instância da classe PedidoCadastrado e define o valor do ID obtido no atributo id.
Cria uma instância da classe PedidoCadastradoDAO.
Chama o método ExcluirPedidoCadastrado() da classe PedidoCadastradoDAO, passando o objeto objPedidoCadastrado como argumento para realizar a exclusão no banco de dados.   
 */            
        int id = 0;

        id = Integer.parseInt(ID.getText());

        PedidoCadastrado objPedidoCadastrado = new PedidoCadastrado();
        objPedidoCadastrado.setId_Pedido(id);

        PedidoCadastradoDAO objPedidoCadastradoDAO = new PedidoCadastradoDAO();
        objPedidoCadastradoDAO.ExcluirPedidoCadastrado(objPedidoCadastrado);
    }

}
